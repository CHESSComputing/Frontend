<div class="grid">
    <div class="column column-4">
		<b class="is-logo">
		Showing {{.StartIndex}}&#8212;{{.EndIndex}} records out of {{.Total}}
		</b>
    </div>
    <div class="column column-1">
        <button class="button button-small disabled">Sort by:</button>
    </div>
    <div class="column column-2">
        <form id="searchSortForm" action="/search" method="POST">
            <input type="hidden" name="query" value='{{.Query}}'>
            <input type="hidden" name="idx" value="0">
            <input type="hidden" name="limit" value="10">
            <input type="hidden" id="sort_order" name="sort_order" value="descending">
            <div class="sort-container">
            <select id="sort_keys" name="sort_keys" onchange="submitSearchForm()" class="dropdown">
                <option value="date-ascending">Date ▲</option>
                <option value="date-descending">Date ▼</option>
                <option value="did-ascending">DID ▲</option>
                <option value="did-descending">DID ▼</option>
                <option value="beamline-ascending">Beamline ▲</option>
                <option value="beamline-descending">Beamline ▼</option>
                <option value="btr-ascending">Btr ▲</option>
                <option value="btr-descending">Btr ▼</option>
                <option value="cycle-ascending">Cycle ▲</option>
                <option value="cycle-descending">Cycle ▼</option>
                <option value="sample-ascending">Sample ▲</option>
                <option value="sample-descending">Sample ▼</option>
            </select>
            </div>
        </form>
    </div>
    <div class="column column-5">
        <a href="{{.FirstUrl}}" class="button button-small">first</a>
        <a href="{{.PrevUrl}}"  class="button button-small">prev</a>
        <a href="{{.NextUrl}}"  class="button button-small">next</a>
        <a href="{{.LastUrl}}"  class="button button-small">last</a>
    </div>
</div>
<p>User: {{.User}} &nbsp; BTRs: {{.Btrs}}</p>

<script>
function submitSearchForm() {
    // Get the selected option from the dropdown
    var sortElement = document.getElementById("sort_keys");
    var selectedValue = sortElement.value;

    // Extract the sort key and sort order from the selected option
    var [sortKey, sortOrder] = selectedValue.split('-');

    // Update the hidden fields in the form
    document.getElementById("sort_order").value = sortOrder;

    // Submit the form with the updated values
    document.getElementById("searchSortForm").submit();
}

function changeSort(defaultOption) {
    var select = document.getElementById('sortkey');
    var options = Array.from(select.options);

    options.sort((a, b) => (a.value === defaultOption) ? -1 : (b.value === defaultOption) ? 1 : 0);

    // Clear existing options and re-add in new order
    select.innerHTML = '';
    options.forEach(option => {
        select.appendChild(option);
    });

    // Set the first option as selected
    select.selectedIndex = 0;
}
// changeSort('{{.SortKey}}');

function reorderSortOptions(sortKey, sortOrder) {
    // Get the select element
    var sortSelect = document.getElementById("sort_keys");

    // Get all options from the select element
    var options = Array.from(sortSelect.options);

    // Create a new array to hold reordered options
    var reorderedOptions = [];

    // First, find the selected option and its opposite sort order option
    var selectedOption = null;
    var oppositeOption = null;
    options.forEach(function(option) {
        var [key, order] = option.value.split('-');
        if (key === sortKey) {
            if (order === sortOrder) {
                selectedOption = option;
            } else {
                oppositeOption = option;
            }
        }
    });

    // Add the selected option to the beginning of the reordered array
    if (selectedOption) {
        reorderedOptions.push(selectedOption);
    }

    // Add the opposite sort order option right after the selected one
    if (oppositeOption) {
        reorderedOptions.push(oppositeOption);
    }

    // Now group the rest of the options by sortKey (excluding the selected sortKey options)
    options.forEach(function(option) {
        var [key, order] = option.value.split('-');
        if (key !== sortKey) {
            reorderedOptions.push(option);
        }
    });

    // Empty the current select dropdown
    sortSelect.innerHTML = '';

    // Append reordered options
    reorderedOptions.forEach(function(option) {
        sortSelect.appendChild(option);
    });

    // Set the selected option as selected
    if (selectedOption) {
        sortSelect.selectedIndex = 0;
    }
}

reorderSortOptions('{{.SortKey}}', '{{.SortOrder}}');
</script>
