<section>
  <article id="article">
<div class="center huge">
     FOXDEN: datasets
</div>
    <table id="jsonTable" class="display">
        <thead>
            <tr>
                {{range $index, $displayName := .DisplayNames}}
                    <th>{{$displayName}}</th>
                {{end}}
                <th>Record</th> <!-- New column for actions -->
            </tr>
        </thead>
        <tbody></tbody>
    </table>
  </article>
</section>

<script>
    // Helper function to POST JSON data
    function postData(url = '', data = {}) {
        return fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => console.log('Success:', data))
        .catch((error) => console.error('Error:', error));
    }

    // Fetch JSON data from the server and dynamically build the table
    fetch('/datasets')
    .then(response => response.json())
    .then(data => {
        let tableBody = '';
        data.forEach(item => {
            tableBody += '<tr>';
            {{- range $index, $column := .Columns }}
                tableBody += '<td>' + item["{{$column}}"] + '</td>';
            {{- end }}

            // Construct a form for each row to POST selected columns (e.g., sample_name and age) to /search
            const payload = {
                {{- range $index, $column := .Columns }}
                    "{{ $column }}": item["{{$column}}"],
                {{- end }}
            };
            const payloadStr = JSON.stringify(payload);

            tableBody += `
                    <td>
                        <form action="/search" method="POST" style="display:inline;">
                            <input type="hidden" name="query" value='${payloadStr}'>
                            <button type="submit">Record</button>
                        </form>
                    </td>`;

            // Add a link that sends a POST request to /search with the row's JSON data
            // tableBody += `<td><a href="#" onclick='postData("/search", ${JSON.stringify(item)}); return false;'>Record</a></td>`;
            tableBody += '</tr>';
        });
        document.querySelector('#jsonTable tbody').innerHTML = tableBody;
        // Initialize DataTables to make the table sortable
        $('#jsonTable').DataTable();
    })
    .catch(error => console.error('Error fetching JSON:', error));
</script>
